#region License

// ----------------------------------------------------------------------------
// Pomona source code
// 
// Copyright © 2012 Karsten Nikolai Strand
// 
// Permission is hereby granted, free of charge, to any person obtaining a 
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
// ----------------------------------------------------------------------------

#endregion

using System;

using CritterClient;

using NUnit.Framework;

using Pomona.Example;

namespace CritterClientTests
{
    [TestFixture]
    public class OklunchDemoTests
    {
        [Test]
        public void QueryDemoTest_WTFFF()
        {
            // Start a pomona server instance
            const string baseUri = "http://localhost:1337/";
            var critterHost = new CritterHost(new Uri(baseUri));
            critterHost.Start();

            // Create the client (the client library that has been generated by pomona)
            var client = new Client { BaseUri = baseUri };


            var critterStartingWithA = client.Query<ICritter>(x => x is IMusicalCritter && ((IMusicalCritter)x).BandName.Contains("x"));

            // Examples

            //var results = client.Query<ICritter>(x => x.Id % 10 == 0);

            //results = client.Query<ICritter>(x => x.Hat.Id % 5 == 0);


            //results = client.Query<ICritter>(x => x.Name.StartsWith("De"));

            //results = client.Query<ICritter>(x => x.Name.Contains("x"));

            //results =
            //    client.Query<ICritter>(x =>
            //        x.Name.StartsWith("De") ||
            //        (x is IMusicalCritter && ((IMusicalCritter)x).BandName.StartsWith("The A")));
        }
    }
}